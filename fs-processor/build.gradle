plugins {
  id 'build.jar'
  //id 'org.jetbrains.kotlin.plugin.lombok' version '1.7.0'
  id 'io.freefair.lombok' version '5.3.0'
}

description = "Core of mage."

java {
  registerFeature('optionalSupport') {
    usingSourceSet(sourceSets.main)
  }
}

sourceSets {
  main.java.srcDirs += ['src/main/kotlin', 'src/main/java']
  test.java.srcDirs += ['src/test/kotlin', 'src/test/java']
}


dependencies {
  api platform(project(":fs-dependencies"))

  implementation 'org.apache.velocity:velocity-engine-core:2.3'
  //implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.3.2'
  // https://mvnrepository.com/artifact/com.github.javaparser/javaparser-core
  implementation group: 'com.github.javaparser', name: 'javaparser-core', version: '3.25.2'

  //compileOnly 'com.google.auto.service:auto-service:1.0-rc7'
  //annotationProcessor 'com.google.auto.service:auto-service:1.0-rc7'
  //compileOnly 'com.google.guava:guava:21.0'
  //annotationProcessor 'com.google.dagger:dagger-compiler:2.x'
  //implementation 'com.google.dagger:dagger:2.x'

  //api project(":boat-annotations")
  //
  compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
  //
  //compileOnly "org.springframework:spring-core"
  //compileOnly "cglib:cglib"
  //
  //implementation project(":fs-processor")
  //
  //testImplementation project(":boat-test")
  //testImplementation "commons-beanutils:commons-beanutils"
  //testImplementation "org.springframework:spring-core"
  //testImplementation "cglib:cglib"
  //
  //testAnnotationProcessor platform(project(":boat-dependencies"))
  //testAnnotationProcessor "org.openjdk.jmh:jmh-generator-annprocess"
  //
  //testImplementation "org.apache.velocity:velocity"
  //testImplementation "io.netty:netty-all"

  //testImplementation group: 'cn.hutool', name: 'hutool-all', version: '5.7.14'
  //implementation group: 'cn.hutool', name: 'hutool-all', version: '5.7.14'
}

//utils.writeBuildInfos(project, "src/main/resources/META-INF/build.properties")

//tasks.withType(JavaCompile).configureEach {
//  options.compilerArgs += ['-Werror', '-Xlint']
//}

System.setProperty("projectPath", project.getProjectDir().getPath())
System.setProperty("rootProjectPath", rootDir.getPath())