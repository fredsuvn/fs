plugins {
  id "com.google.protobuf" version "$protobufPluginVersion"
  id 'build.sample'
}

description = "Boat Others Samples"

java {
  registerFeature('optionalSupport') {
    usingSourceSet(sourceSets.main)
  }
}

dependencies {
  implementation project(":boat-others:boat-protobuf")

  testImplementation project(":boat-test")
  testImplementation "cglib:cglib"
}

def protoGenBaseDir = "generated/proto/"

sourceSets {
  test {
    proto {
      // In addition to the default 'src/test/proto'
      //srcDir 'src/test/protocolbuffers'
    }
    java {
      srcDirs += "$protoGenBaseDir/test/java"
    }
  }
}

protobuf {
  // Configure the protoc executable
  protoc {
    // Download from repositories
    artifact = "com.google.protobuf:protoc:$protocVersion"

    generatedFilesBaseDir = "$projectDir/$protoGenBaseDir"
  }

  plugins {
    //grpc {
    //  artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
    //}
    //grpckt {
    //  artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpcKotlinVersion"
    //}
  }

  generateProtoTasks {
    all()*.each { task ->
      task.plugins {
        // Generate Java gRPC classes
        //grpc {
        //  setOutputSubDir "$protoGenDir"
        //}
        // Generate Kotlin gRPC using the custom plugin from library
        //grpckt {}
      }
    }
  }
}

clean {
  delete("${protobuf.generatedFilesBaseDir}")
}